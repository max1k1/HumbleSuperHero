{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [contentHeight, setContentHeight] = useState(500);\n  const [error, setError] = useState(null);\n  const heroSize = 150; // Fixed size (width and height) for each hero card\n  const padding = 10; // Padding used for collision detection\n\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setHeroes(data.superheroesData); // Assumes API returns { superheroesData: Hero[] }\n      } catch (err) {\n        console.error(\"Error fetching heroes:\", err);\n        setError(\"Failed to load superheroes. Please try again later.\");\n      }\n    };\n    fetchHeroes();\n  }, []);\n\n  /**\r\n   * Generates non-overlapping positions for all heroes.\r\n   * Uses a dynamic vertical range (minimum 500px) so that if there isn’t enough room at the top,\r\n   * heroes will be positioned lower (making the inner content taller and scrollable).\r\n   */\n  const generateNonOverlappingPositions = () => {\n    const generatedPositions = [];\n    const containerWidthPx = window.innerWidth;\n    // Define the vertical placement range: at least 500px, or more if there are many heroes.\n    const maxTop = Math.max(500, heroes.length * (heroSize + padding));\n    heroes.forEach(hero => {\n      let pos;\n      let attempts = 0;\n      // Horizontal bias based on hero.humility (you can adjust this logic as desired)\n      const onePoint = (containerWidthPx - 10) / 20;\n      const minLeft = onePoint * hero.humility;\n      const maxLeftCandidate = onePoint * hero.humility * 2;\n      do {\n        // Generate a horizontal coordinate with a bias:\n        let leftCandidate = Math.random() * (maxLeftCandidate - minLeft) + minLeft;\n        // Ensure leftCandidate stays within container bounds\n        leftCandidate = Math.max(0, Math.min(leftCandidate, containerWidthPx - heroSize));\n        pos = {\n          left: leftCandidate,\n          top: Math.random() * (maxTop - heroSize)\n        };\n\n        // Check against all previously placed hero cards for overlap\n        const collides = generatedPositions.some(existing => {\n          return pos.left < existing.left + heroSize + padding && pos.left + heroSize + padding > existing.left && pos.top < existing.top + heroSize + padding && pos.top + heroSize + padding > existing.top;\n        });\n        if (!collides) {\n          break;\n        }\n        attempts++;\n      } while (attempts < 100);\n      generatedPositions.push(pos);\n    });\n    return generatedPositions;\n  };\n\n  // Once heroes are loaded, generate their positions and determine the overall content height.\n  useEffect(() => {\n    if (heroes.length > 0) {\n      const pos = generateNonOverlappingPositions();\n      setPositions(pos);\n      // Compute the needed content height based on the lowest positioned hero.\n      const computedHeight = pos.reduce((max, cur) => Math.max(max, cur.top + heroSize + padding), 500);\n      setContentHeight(computedHeight);\n    }\n  }, [heroes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: `${contentHeight}px`\n      },\n      children: heroes.map((hero, i) => {\n        const pos = positions[i];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.heroItem,\n          style: {\n            left: pos ? `${pos.left}px` : \"0px\",\n            top: pos ? `${pos.top}px` : \"0px\",\n            width: `${heroSize}px`,\n            height: `${heroSize}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: hero.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hero.superpower\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humility: \", hero.humility]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"AH/+EX+P/ZCGeWl/aZZ7up7SQpA=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","positions","setPositions","contentHeight","setContentHeight","error","setError","heroSize","padding","fetchHeroes","response","fetch","process","env","REACT_APP_BACK_END_API","ok","Error","status","data","json","superheroesData","err","console","generateNonOverlappingPositions","generatedPositions","containerWidthPx","window","innerWidth","maxTop","Math","max","length","forEach","hero","pos","attempts","onePoint","minLeft","humility","maxLeftCandidate","leftCandidate","random","min","left","top","collides","some","existing","push","computedHeight","reduce","cur","className","heroesList","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","map","i","heroItem","width","name","superpower","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number;\r\n};\r\n\r\ntype Position = {\r\n    left: number;\r\n    top: number;\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [positions, setPositions] = useState<Position[]>([]);\r\n    const [contentHeight, setContentHeight] = useState<number>(500);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const heroSize = 150; // Fixed size (width and height) for each hero card\r\n    const padding = 10; // Padding used for collision detection\r\n\r\n    useEffect(() => {\r\n        const fetchHeroes = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `${process.env.REACT_APP_BACK_END_API}/superheroes`\r\n                );\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setHeroes(data.superheroesData); // Assumes API returns { superheroesData: Hero[] }\r\n            } catch (err) {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchHeroes();\r\n    }, []);\r\n\r\n    /**\r\n     * Generates non-overlapping positions for all heroes.\r\n     * Uses a dynamic vertical range (minimum 500px) so that if there isn’t enough room at the top,\r\n     * heroes will be positioned lower (making the inner content taller and scrollable).\r\n     */\r\n    const generateNonOverlappingPositions = (): Position[] => {\r\n        const generatedPositions: Position[] = [];\r\n        const containerWidthPx = window.innerWidth;\r\n        // Define the vertical placement range: at least 500px, or more if there are many heroes.\r\n        const maxTop = Math.max(500, heroes.length * (heroSize + padding));\r\n\r\n        heroes.forEach((hero) => {\r\n            let pos: Position;\r\n            let attempts = 0;\r\n            // Horizontal bias based on hero.humility (you can adjust this logic as desired)\r\n            const onePoint = (containerWidthPx - 10) / 20;\r\n            const minLeft = onePoint * hero.humility;\r\n            const maxLeftCandidate = onePoint * hero.humility * 2;\r\n\r\n            do {\r\n                // Generate a horizontal coordinate with a bias:\r\n                let leftCandidate =\r\n                    Math.random() * (maxLeftCandidate - minLeft) + minLeft;\r\n                // Ensure leftCandidate stays within container bounds\r\n                leftCandidate = Math.max(\r\n                    0,\r\n                    Math.min(leftCandidate, containerWidthPx - heroSize)\r\n                );\r\n\r\n                pos = {\r\n                    left: leftCandidate,\r\n                    top: Math.random() * (maxTop - heroSize)\r\n                };\r\n\r\n                // Check against all previously placed hero cards for overlap\r\n                const collides = generatedPositions.some((existing) => {\r\n                    return (\r\n                        pos.left < existing.left + heroSize + padding &&\r\n                        pos.left + heroSize + padding > existing.left &&\r\n                        pos.top < existing.top + heroSize + padding &&\r\n                        pos.top + heroSize + padding > existing.top\r\n                    );\r\n                });\r\n\r\n                if (!collides) {\r\n                    break;\r\n                }\r\n                attempts++;\r\n            } while (attempts < 100);\r\n\r\n            generatedPositions.push(pos);\r\n        });\r\n\r\n        return generatedPositions;\r\n    };\r\n\r\n    // Once heroes are loaded, generate their positions and determine the overall content height.\r\n    useEffect(() => {\r\n        if (heroes.length > 0) {\r\n            const pos = generateNonOverlappingPositions();\r\n            setPositions(pos);\r\n            // Compute the needed content height based on the lowest positioned hero.\r\n            const computedHeight = pos.reduce(\r\n                (max, cur) => Math.max(max, cur.top + heroSize + padding),\r\n                500\r\n            );\r\n            setContentHeight(computedHeight);\r\n        }\r\n    }, [heroes]);\r\n\r\n    return (\r\n        <div className={s.heroesList}>\r\n            {error && <p>{error}</p>}\r\n            {/* The inner wrapper has a dynamic height to contain all hero cards.\r\n          It is positioned relative so that the absolute hero cards will be placed correctly. */}\r\n            <div style={{ position: \"relative\", height: `${contentHeight}px` }}>\r\n                {heroes.map((hero, i) => {\r\n                    const pos = positions[i];\r\n                    return (\r\n                        <div\r\n                            key={i}\r\n                            className={s.heroItem}\r\n                            style={{\r\n                                left: pos ? `${pos.left}px` : \"0px\",\r\n                                top: pos ? `${pos.top}px` : \"0px\",\r\n                                width: `${heroSize}px`,\r\n                                height: `${heroSize}px`\r\n                            }}\r\n                        >\r\n                            <strong>{hero.name}</strong>\r\n                            <p>{hero.superpower}</p>\r\n                            <p>Humility: {hero.humility}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}