{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [positions, setPositions] = useState([]); // To store unique positions\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setHeroes(data.superheroesData); // Assuming API returns { superheroesData: [] }\n\n        // Generate non-overlapping positions for the heroes\n        const newPositions = generatePositions(data.superheroesData.length);\n        setPositions(newPositions);\n      } catch (err) {\n        console.error(\"Error fetching heroes:\", err);\n        setError(\"Failed to load superheroes. Please try again later.\");\n      }\n    };\n    fetchHeroes();\n  }, []);\n  const generatePositions = count => {\n    const containerWidth = window.innerWidth - 200; // Full width minus padding/margins\n    const containerHeight = 500; // Fixed height\n    const itemWidth = 150; // Width of a hero card\n    const itemHeight = 150; // Height of a hero card\n    const padding = 10; // Padding between items\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      let position;\n      let isOverlapping;\n      do {\n        isOverlapping = false;\n        position = {\n          left: Math.random() * (containerWidth - itemWidth),\n          top: Math.random() * (containerHeight - itemHeight)\n        };\n\n        // Check for overlap with existing positions\n        isOverlapping = positions.some(existing => Math.abs(existing.left - position.left) < itemWidth + padding && Math.abs(existing.top - position.top) < itemHeight + padding);\n      } while (isOverlapping);\n      positions.push(position);\n    }\n    return positions;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), heroes.map((hero, i) => {\n      const position = positions[i];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.heroItem,\n        style: {\n          left: `${position === null || position === void 0 ? void 0 : position.left}px`,\n          top: `${position === null || position === void 0 ? void 0 : position.top}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: hero.superpower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humility: \", hero.humility]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"gvMx05fhINa3R5cupuBTRUSWHAk=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","positions","setPositions","error","setError","fetchHeroes","response","fetch","process","env","REACT_APP_BACK_END_API","ok","Error","status","data","json","superheroesData","newPositions","generatePositions","length","err","console","count","containerWidth","window","innerWidth","containerHeight","itemWidth","itemHeight","padding","i","position","isOverlapping","left","Math","random","top","some","existing","abs","push","className","heroesList","children","fileName","_jsxFileName","lineNumber","columnNumber","map","hero","heroItem","style","name","superpower","humility","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number;\r\n};\r\n\r\ntype Position = {\r\n    left: number;\r\n    top: number;\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [positions, setPositions] = useState<Position[]>([]); // To store unique positions\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchHeroes = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setHeroes(data.superheroesData); // Assuming API returns { superheroesData: [] }\r\n\r\n                // Generate non-overlapping positions for the heroes\r\n                const newPositions = generatePositions(data.superheroesData.length);\r\n                setPositions(newPositions);\r\n            } catch (err) {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchHeroes();\r\n    }, []);\r\n\r\n    const generatePositions = (count: number): Position[] => {\r\n        const containerWidth = window.innerWidth - 200; // Full width minus padding/margins\r\n        const containerHeight = 500; // Fixed height\r\n        const itemWidth = 150; // Width of a hero card\r\n        const itemHeight = 150; // Height of a hero card\r\n        const padding = 10; // Padding between items\r\n        const positions: Position[] = [];\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            let position: Position;\r\n            let isOverlapping: boolean;\r\n\r\n            do {\r\n                isOverlapping = false;\r\n                position = {\r\n                    left: Math.random() * (containerWidth - itemWidth),\r\n                    top: Math.random() * (containerHeight - itemHeight),\r\n                };\r\n\r\n                // Check for overlap with existing positions\r\n                isOverlapping = positions.some(\r\n                    (existing) =>\r\n                        Math.abs(existing.left - position.left) < itemWidth + padding &&\r\n                        Math.abs(existing.top - position.top) < itemHeight + padding\r\n                );\r\n            } while (isOverlapping);\r\n\r\n            positions.push(position);\r\n        }\r\n\r\n        return positions;\r\n    };\r\n\r\n    return (\r\n        <div className={s.heroesList}>\r\n            {error && <p>{error}</p>}\r\n            {heroes.map((hero, i) => {\r\n                const position = positions[i];\r\n                return (\r\n                    <div\r\n                        key={i}\r\n                        className={s.heroItem}\r\n                        style={{\r\n                            left: `${position?.left}px`,\r\n                            top: `${position?.top}px`,\r\n                        }}\r\n                    >\r\n                        <strong>{hero.name}</strong>\r\n                        <p>{hero.superpower}</p>\r\n                        <p>Humility: {hero.humility}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}