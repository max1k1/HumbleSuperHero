{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fixed sizes and layout constants\n  const heroSize = 150; // Each hero card is 150x150px\n  const padding = 10; // Vertical spacing between hero cards\n  const totalZones = 10; // There are 10 discrete horizontal zones\n\n  useEffect(() => {\n    // Fetch heroes from your API\n    fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`).then(response => {\n      if (!response.ok) throw new Error(`Error: ${response.status}`);\n      return response.json();\n    }).then(data => setHeroes(data.superheroesData)) // Assumes data.superheroesData is an array\n    .catch(err => {\n      console.error(\"Error fetching heroes:\", err);\n      setError(\"Failed to load superheroes. Please try again later.\");\n    });\n  }, []);\n\n  // Shuffle heroes to randomize the vertical order\n  const shuffledHeroes = [...heroes].sort(() => Math.random() - 0.5);\n\n  // Determine horizontal zone width based on current window width.\n  // (You can also use a ref to measure the actual container if needed.)\n  const containerWidth = window.innerWidth - 10;\n  const zoneWidth = containerWidth / totalZones;\n\n  // Compute container height so that all hero cards fit (creating vertical slots)\n  const containerHeight = shuffledHeroes.length * (heroSize + padding);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: `${containerHeight}px`\n      },\n      children: shuffledHeroes.map((hero, index) => {\n        // Each hero’s horizontal zone is determined by its humility\n        const zoneIndex = hero.humility - 1; // Convert 1-indexed humility to 0-indexed zone\n        const zoneStart = zoneIndex * zoneWidth;\n        // Pick a random left position within the zone (ensuring the card fits)\n        const left = zoneStart + Math.random() * Math.max(0, zoneWidth - heroSize);\n        // Each hero gets its own vertical slot so they don't overlap\n        const top = index * (heroSize + padding);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.heroItem,\n          style: {\n            left: `${left}px`,\n            top: `${top}px`,\n            width: `${heroSize}px`,\n            height: `${heroSize}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: hero.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hero.superpower\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humility: \", hero.humility]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"AW0r0zCazdhaK1l3fpYEafEMgOI=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","error","setError","heroSize","padding","totalZones","fetch","process","env","REACT_APP_BACK_END_API","then","response","ok","Error","status","json","data","superheroesData","catch","err","console","shuffledHeroes","sort","Math","random","containerWidth","window","innerWidth","zoneWidth","containerHeight","length","className","heroesList","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","map","hero","index","zoneIndex","humility","zoneStart","left","max","top","heroItem","width","name","superpower","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number; // Expected to be an integer from 1 to 10\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    // Fixed sizes and layout constants\r\n    const heroSize = 150; // Each hero card is 150x150px\r\n    const padding = 10;   // Vertical spacing between hero cards\r\n    const totalZones = 10; // There are 10 discrete horizontal zones\r\n\r\n    useEffect(() => {\r\n        // Fetch heroes from your API\r\n        fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`)\r\n            .then(response => {\r\n                if (!response.ok) throw new Error(`Error: ${response.status}`);\r\n                return response.json();\r\n            })\r\n            .then(data => setHeroes(data.superheroesData)) // Assumes data.superheroesData is an array\r\n            .catch(err => {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            });\r\n    }, []);\r\n\r\n    // Shuffle heroes to randomize the vertical order\r\n    const shuffledHeroes = [...heroes].sort(() => Math.random() - 0.5);\r\n\r\n    // Determine horizontal zone width based on current window width.\r\n    // (You can also use a ref to measure the actual container if needed.)\r\n    const containerWidth = window.innerWidth - 10;\r\n    const zoneWidth = containerWidth / totalZones;\r\n\r\n    // Compute container height so that all hero cards fit (creating vertical slots)\r\n    const containerHeight = shuffledHeroes.length * (heroSize + padding);\r\n\r\n    return (\r\n        <div className={s.heroesList}>\r\n            {error && <p>{error}</p>}\r\n            {/* The inner wrapper's height is dynamic so the container becomes scrollable if needed */}\r\n            <div style={{ position: \"relative\", height: `${containerHeight}px` }}>\r\n                {shuffledHeroes.map((hero, index) => {\r\n                    // Each hero’s horizontal zone is determined by its humility\r\n                    const zoneIndex = hero.humility - 1; // Convert 1-indexed humility to 0-indexed zone\r\n                    const zoneStart = zoneIndex * zoneWidth;\r\n                    // Pick a random left position within the zone (ensuring the card fits)\r\n                    const left = zoneStart + Math.random() * Math.max(0, zoneWidth - heroSize);\r\n                    // Each hero gets its own vertical slot so they don't overlap\r\n                    const top = index * (heroSize + padding);\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            className={s.heroItem}\r\n                            style={{\r\n                                left: `${left}px`,\r\n                                top: `${top}px`,\r\n                                width: `${heroSize}px`,\r\n                                height: `${heroSize}px`\r\n                            }}\r\n                        >\r\n                            <strong>{hero.name}</strong>\r\n                            <p>{hero.superpower}</p>\r\n                            <p>Humility: {hero.humility}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}