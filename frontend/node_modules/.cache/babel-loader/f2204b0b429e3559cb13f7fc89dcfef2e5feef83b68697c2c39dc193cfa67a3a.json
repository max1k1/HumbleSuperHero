{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [contentHeight, setContentHeight] = useState(500);\n  const [error, setError] = useState(null);\n  const heroSize = 150; // Fixed size for each hero card (width & height)\n  const padding = 10; // Padding for collision detection\n\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setHeroes(data.superheroesData); // Assumes API returns { superheroesData: Hero[] }\n      } catch (err) {\n        console.error(\"Error fetching heroes:\", err);\n        setError(\"Failed to load superheroes. Please try again later.\");\n      }\n    };\n    fetchHeroes();\n  }, []);\n\n  /**\r\n   * Generates non-overlapping positions for all heroes.\r\n   * Each hero is locked into a discrete horizontal zone based on its humility.\r\n   * The container’s width is divided into 10 equal zones (for humility values 1–10).\r\n   * The vertical range is dynamic (minimum of 500px) so that if there isn’t enough room,\r\n   * heroes will be placed lower and the container becomes scrollable.\r\n   */\n  const generateNonOverlappingPositions = () => {\n    const generatedPositions = [];\n    const containerWidthPx = window.innerWidth;\n    // Dynamic vertical range: at least 500px or more if many heroes are added.\n    const maxTop = Math.max(500, heroes.length * (heroSize + padding));\n\n    // Define discrete horizontal zones.\n    const totalZones = 10; // Assuming humility values are 1–10.\n    const zoneWidth = (containerWidthPx - 10) / totalZones;\n    heroes.forEach(hero => {\n      let pos;\n      let attempts = 0;\n      do {\n        // For a given hero, calculate its zone.\n        // (Subtract 1 to convert 1-indexed humility to 0-indexed zone.)\n        const zoneIndex = hero.humility - 1;\n        const zoneStart = zoneIndex * zoneWidth;\n        const zoneEnd = zoneStart + zoneWidth;\n\n        // Generate a random horizontal coordinate within the hero's zone.\n        // Ensure that the hero card fits inside the zone.\n        let leftCandidate = zoneStart + Math.random() * Math.max(0, zoneEnd - heroSize - zoneStart);\n        leftCandidate = Math.max(zoneStart, Math.min(leftCandidate, zoneEnd - heroSize));\n\n        // Generate a random vertical coordinate within the dynamic range.\n        const topCandidate = Math.random() * (maxTop - heroSize);\n        pos = {\n          left: leftCandidate,\n          top: topCandidate\n        };\n\n        // Check for collision with previously placed heroes.\n        const collides = generatedPositions.some(existing => {\n          return pos.left < existing.left + heroSize + padding && pos.left + heroSize + padding > existing.left && pos.top < existing.top + heroSize + padding && pos.top + heroSize + padding > existing.top;\n        });\n        if (!collides) {\n          break;\n        }\n        attempts++;\n      } while (attempts < 100);\n      generatedPositions.push(pos);\n    });\n    return generatedPositions;\n  };\n\n  // Once heroes are loaded, generate their positions and compute the required content height.\n  useEffect(() => {\n    if (heroes.length > 0) {\n      const pos = generateNonOverlappingPositions();\n      setPositions(pos);\n      // Compute the overall content height based on the lowest positioned hero.\n      const computedHeight = pos.reduce((max, cur) => Math.max(max, cur.top + heroSize + padding), 500);\n      setContentHeight(computedHeight);\n    }\n  }, [heroes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: `${contentHeight}px`\n      },\n      children: heroes.map((hero, i) => {\n        const pos = positions[i];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.heroItem,\n          style: {\n            left: pos ? `${pos.left}px` : \"0px\",\n            top: pos ? `${pos.top}px` : \"0px\",\n            width: `${heroSize}px`,\n            height: `${heroSize}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: hero.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hero.superpower\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humility: \", hero.humility]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"AH/+EX+P/ZCGeWl/aZZ7up7SQpA=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","positions","setPositions","contentHeight","setContentHeight","error","setError","heroSize","padding","fetchHeroes","response","fetch","process","env","REACT_APP_BACK_END_API","ok","Error","status","data","json","superheroesData","err","console","generateNonOverlappingPositions","generatedPositions","containerWidthPx","window","innerWidth","maxTop","Math","max","length","totalZones","zoneWidth","forEach","hero","pos","attempts","zoneIndex","humility","zoneStart","zoneEnd","leftCandidate","random","min","topCandidate","left","top","collides","some","existing","push","computedHeight","reduce","cur","className","heroesList","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","map","i","heroItem","width","name","superpower","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number;\r\n};\r\n\r\ntype Position = {\r\n    left: number;\r\n    top: number;\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [positions, setPositions] = useState<Position[]>([]);\r\n    const [contentHeight, setContentHeight] = useState<number>(500);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const heroSize = 150; // Fixed size for each hero card (width & height)\r\n    const padding = 10;   // Padding for collision detection\r\n\r\n    useEffect(() => {\r\n        const fetchHeroes = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `${process.env.REACT_APP_BACK_END_API}/superheroes`\r\n                );\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setHeroes(data.superheroesData); // Assumes API returns { superheroesData: Hero[] }\r\n            } catch (err) {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchHeroes();\r\n    }, []);\r\n\r\n    /**\r\n     * Generates non-overlapping positions for all heroes.\r\n     * Each hero is locked into a discrete horizontal zone based on its humility.\r\n     * The container’s width is divided into 10 equal zones (for humility values 1–10).\r\n     * The vertical range is dynamic (minimum of 500px) so that if there isn’t enough room,\r\n     * heroes will be placed lower and the container becomes scrollable.\r\n     */\r\n    const generateNonOverlappingPositions = (): Position[] => {\r\n        const generatedPositions: Position[] = [];\r\n        const containerWidthPx = window.innerWidth;\r\n        // Dynamic vertical range: at least 500px or more if many heroes are added.\r\n        const maxTop = Math.max(500, heroes.length * (heroSize + padding));\r\n\r\n        // Define discrete horizontal zones.\r\n        const totalZones = 10; // Assuming humility values are 1–10.\r\n        const zoneWidth = (containerWidthPx - 10) / totalZones;\r\n\r\n        heroes.forEach((hero) => {\r\n            let pos: Position;\r\n            let attempts = 0;\r\n\r\n            do {\r\n                // For a given hero, calculate its zone.\r\n                // (Subtract 1 to convert 1-indexed humility to 0-indexed zone.)\r\n                const zoneIndex = hero.humility - 1;\r\n                const zoneStart = zoneIndex * zoneWidth;\r\n                const zoneEnd = zoneStart + zoneWidth;\r\n\r\n                // Generate a random horizontal coordinate within the hero's zone.\r\n                // Ensure that the hero card fits inside the zone.\r\n                let leftCandidate =\r\n                    zoneStart +\r\n                    Math.random() * Math.max(0, (zoneEnd - heroSize - zoneStart));\r\n                leftCandidate = Math.max(zoneStart, Math.min(leftCandidate, zoneEnd - heroSize));\r\n\r\n                // Generate a random vertical coordinate within the dynamic range.\r\n                const topCandidate = Math.random() * (maxTop - heroSize);\r\n\r\n                pos = { left: leftCandidate, top: topCandidate };\r\n\r\n                // Check for collision with previously placed heroes.\r\n                const collides = generatedPositions.some((existing) => {\r\n                    return (\r\n                        pos.left < existing.left + heroSize + padding &&\r\n                        pos.left + heroSize + padding > existing.left &&\r\n                        pos.top < existing.top + heroSize + padding &&\r\n                        pos.top + heroSize + padding > existing.top\r\n                    );\r\n                });\r\n\r\n                if (!collides) {\r\n                    break;\r\n                }\r\n                attempts++;\r\n            } while (attempts < 100);\r\n\r\n            generatedPositions.push(pos);\r\n        });\r\n\r\n        return generatedPositions;\r\n    };\r\n\r\n    // Once heroes are loaded, generate their positions and compute the required content height.\r\n    useEffect(() => {\r\n        if (heroes.length > 0) {\r\n            const pos = generateNonOverlappingPositions();\r\n            setPositions(pos);\r\n            // Compute the overall content height based on the lowest positioned hero.\r\n            const computedHeight = pos.reduce(\r\n                (max, cur) => Math.max(max, cur.top + heroSize + padding),\r\n                500\r\n            );\r\n            setContentHeight(computedHeight);\r\n        }\r\n    }, [heroes]);\r\n\r\n    return (\r\n        <div className={s.heroesList}>\r\n            {error && <p>{error}</p>}\r\n            {/* The inner wrapper's height is dynamic so that extra content becomes scrollable */}\r\n            <div style={{ position: \"relative\", height: `${contentHeight}px` }}>\r\n                {heroes.map((hero, i) => {\r\n                    const pos = positions[i];\r\n                    return (\r\n                        <div\r\n                            key={i}\r\n                            className={s.heroItem}\r\n                            style={{\r\n                                left: pos ? `${pos.left}px` : \"0px\",\r\n                                top: pos ? `${pos.top}px` : \"0px\",\r\n                                width: `${heroSize}px`,\r\n                                height: `${heroSize}px`\r\n                            }}\r\n                        >\r\n                            <strong>{hero.name}</strong>\r\n                            <p>{hero.superpower}</p>\r\n                            <p>Humility: {hero.humility}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAaxC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAS,GAAG,CAAC;EAC/D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMc,QAAQ,GAAG,GAAG,CAAC,CAAC;EACtB,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAG;;EAEtBhB,SAAS,CAAC,MAAM;IACZ,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,cACzC,CAAC;QACD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,UAAUN,QAAQ,CAACO,MAAM,EAAE,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCnB,SAAS,CAACkB,IAAI,CAACE,eAAe,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACjB,KAAK,CAAC,wBAAwB,EAAEgB,GAAG,CAAC;QAC5Cf,QAAQ,CAAC,qDAAqD,CAAC;MACnE;IACJ,CAAC;IAEDG,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMc,+BAA+B,GAAGA,CAAA,KAAkB;IACtD,MAAMC,kBAA8B,GAAG,EAAE;IACzC,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,UAAU;IAC1C;IACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAE/B,MAAM,CAACgC,MAAM,IAAIxB,QAAQ,GAAGC,OAAO,CAAC,CAAC;;IAElE;IACA,MAAMwB,UAAU,GAAG,EAAE,CAAC,CAAC;IACvB,MAAMC,SAAS,GAAG,CAACR,gBAAgB,GAAG,EAAE,IAAIO,UAAU;IAEtDjC,MAAM,CAACmC,OAAO,CAAEC,IAAI,IAAK;MACrB,IAAIC,GAAa;MACjB,IAAIC,QAAQ,GAAG,CAAC;MAEhB,GAAG;QACC;QACA;QACA,MAAMC,SAAS,GAAGH,IAAI,CAACI,QAAQ,GAAG,CAAC;QACnC,MAAMC,SAAS,GAAGF,SAAS,GAAGL,SAAS;QACvC,MAAMQ,OAAO,GAAGD,SAAS,GAAGP,SAAS;;QAErC;QACA;QACA,IAAIS,aAAa,GACbF,SAAS,GACTX,IAAI,CAACc,MAAM,CAAC,CAAC,GAAGd,IAAI,CAACC,GAAG,CAAC,CAAC,EAAGW,OAAO,GAAGlC,QAAQ,GAAGiC,SAAU,CAAC;QACjEE,aAAa,GAAGb,IAAI,CAACC,GAAG,CAACU,SAAS,EAAEX,IAAI,CAACe,GAAG,CAACF,aAAa,EAAED,OAAO,GAAGlC,QAAQ,CAAC,CAAC;;QAEhF;QACA,MAAMsC,YAAY,GAAGhB,IAAI,CAACc,MAAM,CAAC,CAAC,IAAIf,MAAM,GAAGrB,QAAQ,CAAC;QAExD6B,GAAG,GAAG;UAAEU,IAAI,EAAEJ,aAAa;UAAEK,GAAG,EAAEF;QAAa,CAAC;;QAEhD;QACA,MAAMG,QAAQ,GAAGxB,kBAAkB,CAACyB,IAAI,CAAEC,QAAQ,IAAK;UACnD,OACId,GAAG,CAACU,IAAI,GAAGI,QAAQ,CAACJ,IAAI,GAAGvC,QAAQ,GAAGC,OAAO,IAC7C4B,GAAG,CAACU,IAAI,GAAGvC,QAAQ,GAAGC,OAAO,GAAG0C,QAAQ,CAACJ,IAAI,IAC7CV,GAAG,CAACW,GAAG,GAAGG,QAAQ,CAACH,GAAG,GAAGxC,QAAQ,GAAGC,OAAO,IAC3C4B,GAAG,CAACW,GAAG,GAAGxC,QAAQ,GAAGC,OAAO,GAAG0C,QAAQ,CAACH,GAAG;QAEnD,CAAC,CAAC;QAEF,IAAI,CAACC,QAAQ,EAAE;UACX;QACJ;QACAX,QAAQ,EAAE;MACd,CAAC,QAAQA,QAAQ,GAAG,GAAG;MAEvBb,kBAAkB,CAAC2B,IAAI,CAACf,GAAG,CAAC;IAChC,CAAC,CAAC;IAEF,OAAOZ,kBAAkB;EAC7B,CAAC;;EAED;EACAhC,SAAS,CAAC,MAAM;IACZ,IAAIO,MAAM,CAACgC,MAAM,GAAG,CAAC,EAAE;MACnB,MAAMK,GAAG,GAAGb,+BAA+B,CAAC,CAAC;MAC7CrB,YAAY,CAACkC,GAAG,CAAC;MACjB;MACA,MAAMgB,cAAc,GAAGhB,GAAG,CAACiB,MAAM,CAC7B,CAACvB,GAAG,EAAEwB,GAAG,KAAKzB,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEwB,GAAG,CAACP,GAAG,GAAGxC,QAAQ,GAAGC,OAAO,CAAC,EACzD,GACJ,CAAC;MACDJ,gBAAgB,CAACgD,cAAc,CAAC;IACpC;EACJ,CAAC,EAAE,CAACrD,MAAM,CAAC,CAAC;EAEZ,oBACIH,OAAA;IAAK2D,SAAS,EAAE7D,CAAC,CAAC8D,UAAW;IAAAC,QAAA,GACxBpD,KAAK,iBAAIT,OAAA;MAAA6D,QAAA,EAAIpD;IAAK;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBjE,OAAA;MAAKkE,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,GAAG7D,aAAa;MAAK,CAAE;MAAAsD,QAAA,EAC9D1D,MAAM,CAACkE,GAAG,CAAC,CAAC9B,IAAI,EAAE+B,CAAC,KAAK;QACrB,MAAM9B,GAAG,GAAGnC,SAAS,CAACiE,CAAC,CAAC;QACxB,oBACItE,OAAA;UAEI2D,SAAS,EAAE7D,CAAC,CAACyE,QAAS;UACtBL,KAAK,EAAE;YACHhB,IAAI,EAAEV,GAAG,GAAG,GAAGA,GAAG,CAACU,IAAI,IAAI,GAAG,KAAK;YACnCC,GAAG,EAAEX,GAAG,GAAG,GAAGA,GAAG,CAACW,GAAG,IAAI,GAAG,KAAK;YACjCqB,KAAK,EAAE,GAAG7D,QAAQ,IAAI;YACtByD,MAAM,EAAE,GAAGzD,QAAQ;UACvB,CAAE;UAAAkD,QAAA,gBAEF7D,OAAA;YAAA6D,QAAA,EAAStB,IAAI,CAACkC;UAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC5BjE,OAAA;YAAA6D,QAAA,EAAItB,IAAI,CAACmC;UAAU;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBjE,OAAA;YAAA6D,QAAA,GAAG,YAAU,EAACtB,IAAI,CAACI,QAAQ;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAX3BK,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYL,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/D,EAAA,CApIQD,UAAU;AAAA0E,EAAA,GAAV1E,UAAU;AAsInB,eAAeA,UAAU;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}