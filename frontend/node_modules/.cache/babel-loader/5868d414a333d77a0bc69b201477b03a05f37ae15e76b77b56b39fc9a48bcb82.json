{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [error, setError] = useState(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        // Assumes API returns { superheroesData: Hero[] }\n        setHeroes(data.superheroesData);\n\n        // Use the actual container width if available\n        const containerWidth = containerRef.current ? containerRef.current.clientWidth : window.innerWidth - 200;\n        const newPositions = generatePositions(data.superheroesData, containerWidth);\n        setPositions(newPositions);\n      } catch (err) {\n        console.error(\"Error fetching heroes:\", err);\n        setError(\"Failed to load superheroes. Please try again later.\");\n      }\n    };\n    fetchHeroes();\n  }, []);\n\n  // Calculate the size of an item based on the hero's humility\n  const calculateSize = humility => {\n    const minSize = 100; // Minimum size\n    const maxSize = 200; // Maximum size\n    return minSize + (maxSize - minSize) * ((humility - 1) / 9);\n  };\n\n  // Generate non-overlapping positions for each hero\n  const generatePositions = (heroes, containerWidth) => {\n    const containerHeight = 500; // Fixed height as in CSS\n    const padding = 10; // Padding between items\n    const positions = [];\n    heroes.forEach(hero => {\n      const itemSize = calculateSize(hero.humility);\n\n      // Adjust bias: higher humility heroes (closer to 10) are biased more toward the left\n      // You can adjust these factors as needed.\n      const biasFactor = hero.humility / 10; // 0.1 to 1 for humility 1 to 10\n      const maxLeft = containerWidth - itemSize;\n      // Define a left range that is offset based on the biasFactor.\n      // For example, we shift the starting point by biasFactor * 30% of maxLeft and allow 70% of maxLeft as the range.\n      const leftMin = biasFactor * (maxLeft * 0.3);\n      const leftRange = maxLeft * 0.7;\n      let position;\n      let isOverlapping;\n\n      // Try to find a non-overlapping position\n      do {\n        isOverlapping = false;\n        position = {\n          left: leftMin + Math.random() * leftRange,\n          top: Math.random() * (containerHeight - itemSize)\n        };\n        isOverlapping = positions.some(existing => Math.abs(existing.left - position.left) < itemSize + padding && Math.abs(existing.top - position.top) < itemSize + padding);\n      } while (isOverlapping);\n      positions.push(position);\n    });\n    return positions;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    ref: containerRef,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this), heroes.map((hero, i) => {\n      const position = positions[i];\n      const size = calculateSize(hero.humility);\n      if (!position) return null; // In case positions are not yet generated\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.heroItem,\n        style: {\n          left: `${position.left}px`,\n          top: `${position.top}px`,\n          width: `${size}px`,\n          height: `${size}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: hero.superpower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humility: \", hero.humility]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"QS0ITJNWGtOzX7y1036frc/8tsw=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","positions","setPositions","error","setError","containerRef","fetchHeroes","response","fetch","process","env","REACT_APP_BACK_END_API","ok","Error","status","data","json","superheroesData","containerWidth","current","clientWidth","window","innerWidth","newPositions","generatePositions","err","console","calculateSize","humility","minSize","maxSize","containerHeight","padding","forEach","hero","itemSize","biasFactor","maxLeft","leftMin","leftRange","position","isOverlapping","left","Math","random","top","some","existing","abs","push","className","heroesList","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","size","heroItem","style","width","height","name","superpower","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number; // Humility score (1 to 10)\r\n};\r\n\r\ntype Position = {\r\n    left: number;\r\n    top: number;\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [positions, setPositions] = useState<Position[]>([]);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchHeroes = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                // Assumes API returns { superheroesData: Hero[] }\r\n                setHeroes(data.superheroesData);\r\n\r\n                // Use the actual container width if available\r\n                const containerWidth = containerRef.current\r\n                    ? containerRef.current.clientWidth\r\n                    : window.innerWidth - 200;\r\n                const newPositions = generatePositions(data.superheroesData, containerWidth);\r\n                setPositions(newPositions);\r\n            } catch (err) {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchHeroes();\r\n    }, []);\r\n\r\n    // Calculate the size of an item based on the hero's humility\r\n    const calculateSize = (humility: number) => {\r\n        const minSize = 100; // Minimum size\r\n        const maxSize = 200; // Maximum size\r\n        return minSize + (maxSize - minSize) * ((humility - 1) / 9);\r\n    };\r\n\r\n    // Generate non-overlapping positions for each hero\r\n    const generatePositions = (heroes: Hero[], containerWidth: number): Position[] => {\r\n        const containerHeight = 500; // Fixed height as in CSS\r\n        const padding = 10; // Padding between items\r\n        const positions: Position[] = [];\r\n\r\n        heroes.forEach((hero) => {\r\n            const itemSize = calculateSize(hero.humility);\r\n\r\n            // Adjust bias: higher humility heroes (closer to 10) are biased more toward the left\r\n            // You can adjust these factors as needed.\r\n            const biasFactor = hero.humility / 10; // 0.1 to 1 for humility 1 to 10\r\n            const maxLeft = containerWidth - itemSize;\r\n            // Define a left range that is offset based on the biasFactor.\r\n            // For example, we shift the starting point by biasFactor * 30% of maxLeft and allow 70% of maxLeft as the range.\r\n            const leftMin = biasFactor * (maxLeft * 0.3);\r\n            const leftRange = maxLeft * 0.7;\r\n\r\n            let position: Position;\r\n            let isOverlapping: boolean;\r\n\r\n            // Try to find a non-overlapping position\r\n            do {\r\n                isOverlapping = false;\r\n                position = {\r\n                    left: leftMin + Math.random() * leftRange,\r\n                    top: Math.random() * (containerHeight - itemSize),\r\n                };\r\n\r\n                isOverlapping = positions.some(\r\n                    (existing) =>\r\n                        Math.abs(existing.left - position.left) < itemSize + padding &&\r\n                        Math.abs(existing.top - position.top) < itemSize + padding\r\n                );\r\n            } while (isOverlapping);\r\n\r\n            positions.push(position);\r\n        });\r\n\r\n        return positions;\r\n    };\r\n\r\n    return (\r\n        <div className={s.heroesList} ref={containerRef}>\r\n            {error && <p>{error}</p>}\r\n            {heroes.map((hero, i) => {\r\n                const position = positions[i];\r\n                const size = calculateSize(hero.humility);\r\n                if (!position) return null; // In case positions are not yet generated\r\n                return (\r\n                    <div\r\n                        key={i}\r\n                        className={s.heroItem}\r\n                        style={{\r\n                            left: `${position.left}px`,\r\n                            top: `${position.top}px`,\r\n                            width: `${size}px`,\r\n                            height: `${size}px`,\r\n                        }}\r\n                    >\r\n                        <strong>{hero.name}</strong>\r\n                        <p>{hero.superpower}</p>\r\n                        <p>Humility: {hero.humility}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}