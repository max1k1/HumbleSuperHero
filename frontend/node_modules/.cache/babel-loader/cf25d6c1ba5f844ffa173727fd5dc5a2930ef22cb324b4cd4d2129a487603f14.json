{"ast":null,"code":"var _jsxFileName = \"C:\\\\B.M\\\\Programmer\\\\test-tasks\\\\Humble_Superhero\\\\frontend\\\\src\\\\components\\\\heroesList\\\\HeroesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./HeroesList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroesList() {\n  _s();\n  const [heroes, setHeroes] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACK_END_API}/superheroes`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setHeroes(data.superheroesData); // Assuming API returns { superheroesData: [] }\n      } catch (err) {\n        console.error(\"Error fetching heroes:\", err);\n        setError(\"Failed to load superheroes. Please try again later.\");\n      }\n    };\n    fetchHeroes();\n  }, []);\n\n  /**\r\n   * Generates a random position for a hero based on its humility.\r\n   * This version returns positions in pixels.\r\n   *\r\n   * @param humility - A number from 1 to 10 used to tweak the randomness.\r\n   * @returns An object with `left` and `top` properties (in px).\r\n   */\n  const getRandomPosition = (humility = 1) => {\n    const containerWidthPx = window.innerWidth; // You could also measure the container using a ref\n    const containerHeightPx = 500; // Fixed height per your CSS\n    // Adjust the horizontal randomization based on the hero's humility\n    const onePoint = (containerWidthPx - 10) / 20;\n    const minNumber = onePoint * humility;\n    const maxNumber = onePoint * humility * 2;\n    return {\n      left: Math.random() * (maxNumber - minNumber) + minNumber,\n      top: Math.random() * (containerHeightPx - 150)\n    };\n  };\n\n  /**\r\n   * Generates positions for each hero ensuring that items do not overlap.\r\n   * Assumes each hero card has a fixed size of 150x150px.\r\n   *\r\n   * @returns An array of Position objects.\r\n   */\n  const generateNonOverlappingPositions = () => {\n    const generatedPositions = [];\n    const containerWidthPx = window.innerWidth;\n    const containerHeightPx = 500;\n    const heroSize = 150; // Assumed width and height for collision detection\n\n    heroes.forEach(hero => {\n      let pos;\n      let attempts = 0;\n      // Try to find a position that does not collide with any previously placed hero.\n      do {\n        pos = getRandomPosition(hero.humility);\n        attempts++;\n        // Check collision with each existing position:\n        const collides = generatedPositions.some(existing => {\n          return pos.left < existing.left + heroSize && pos.left + heroSize > existing.left && pos.top < existing.top + heroSize && pos.top + heroSize > existing.top;\n        });\n        // If there is no collision, we can use this position.\n        if (!collides) {\n          break;\n        }\n        // Break out if too many attempts have been made (to avoid an infinite loop).\n        if (attempts > 100) {\n          break;\n        }\n      } while (true);\n      generatedPositions.push(pos);\n    });\n    return generatedPositions;\n  };\n\n  // Once heroes are loaded, generate their non-overlapping positions.\n  useEffect(() => {\n    if (heroes.length > 0) {\n      const pos = generateNonOverlappingPositions();\n      setPositions(pos);\n    }\n  }, [heroes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.heroesList,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this), heroes.map((hero, i) => {\n      const pos = positions[i];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.heroItem,\n        style: {\n          left: pos ? `${pos.left}px` : \"0px\",\n          top: pos ? `${pos.top}px` : \"0px\",\n          width: \"150px\",\n          // Matches the assumed hero size\n          height: \"150px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: hero.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: hero.superpower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humility: \", hero.humility]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(HeroesList, \"vjc7q6psJsAsOYVqpPz8tGABgG4=\");\n_c = HeroesList;\nexport default HeroesList;\nvar _c;\n$RefreshReg$(_c, \"HeroesList\");","map":{"version":3,"names":["React","useEffect","useState","s","jsxDEV","_jsxDEV","HeroesList","_s","heroes","setHeroes","positions","setPositions","error","setError","fetchHeroes","response","fetch","process","env","REACT_APP_BACK_END_API","ok","Error","status","data","json","superheroesData","err","console","getRandomPosition","humility","containerWidthPx","window","innerWidth","containerHeightPx","onePoint","minNumber","maxNumber","left","Math","random","top","generateNonOverlappingPositions","generatedPositions","heroSize","forEach","hero","pos","attempts","collides","some","existing","push","length","className","heroesList","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","heroItem","style","width","height","name","superpower","_c","$RefreshReg$"],"sources":["C:/B.M/Programmer/test-tasks/Humble_Superhero/frontend/src/components/heroesList/HeroesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./HeroesList.module.css\";\r\n\r\ntype Hero = {\r\n    name: string;\r\n    superpower: string;\r\n    humility: number;\r\n};\r\n\r\ntype Position = {\r\n    left: number;\r\n    top: number;\r\n};\r\n\r\nfunction HeroesList() {\r\n    const [heroes, setHeroes] = useState<Hero[]>([]);\r\n    const [positions, setPositions] = useState<Position[]>([]);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchHeroes = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `${process.env.REACT_APP_BACK_END_API}/superheroes`\r\n                );\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setHeroes(data.superheroesData); // Assuming API returns { superheroesData: [] }\r\n            } catch (err) {\r\n                console.error(\"Error fetching heroes:\", err);\r\n                setError(\"Failed to load superheroes. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchHeroes();\r\n    }, []);\r\n\r\n    /**\r\n     * Generates a random position for a hero based on its humility.\r\n     * This version returns positions in pixels.\r\n     *\r\n     * @param humility - A number from 1 to 10 used to tweak the randomness.\r\n     * @returns An object with `left` and `top` properties (in px).\r\n     */\r\n    const getRandomPosition = (humility = 1): Position => {\r\n        const containerWidthPx = window.innerWidth; // You could also measure the container using a ref\r\n        const containerHeightPx = 500; // Fixed height per your CSS\r\n        // Adjust the horizontal randomization based on the hero's humility\r\n        const onePoint = (containerWidthPx - 10) / 20;\r\n        const minNumber = onePoint * humility;\r\n        const maxNumber = onePoint * humility * 2;\r\n        return {\r\n            left: Math.random() * (maxNumber - minNumber) + minNumber,\r\n            top: Math.random() * (containerHeightPx - 150),\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Generates positions for each hero ensuring that items do not overlap.\r\n     * Assumes each hero card has a fixed size of 150x150px.\r\n     *\r\n     * @returns An array of Position objects.\r\n     */\r\n    const generateNonOverlappingPositions = (): Position[] => {\r\n        const generatedPositions: Position[] = [];\r\n        const containerWidthPx = window.innerWidth;\r\n        const containerHeightPx = 500;\r\n        const heroSize = 150; // Assumed width and height for collision detection\r\n\r\n        heroes.forEach((hero) => {\r\n            let pos: Position;\r\n            let attempts = 0;\r\n            // Try to find a position that does not collide with any previously placed hero.\r\n            do {\r\n                pos = getRandomPosition(hero.humility);\r\n                attempts++;\r\n                // Check collision with each existing position:\r\n                const collides = generatedPositions.some((existing) => {\r\n                    return (\r\n                        pos.left < existing.left + heroSize &&\r\n                        pos.left + heroSize > existing.left &&\r\n                        pos.top < existing.top + heroSize &&\r\n                        pos.top + heroSize > existing.top\r\n                    );\r\n                });\r\n                // If there is no collision, we can use this position.\r\n                if (!collides) {\r\n                    break;\r\n                }\r\n                // Break out if too many attempts have been made (to avoid an infinite loop).\r\n                if (attempts > 100) {\r\n                    break;\r\n                }\r\n            } while (true);\r\n            generatedPositions.push(pos);\r\n        });\r\n\r\n        return generatedPositions;\r\n    };\r\n\r\n    // Once heroes are loaded, generate their non-overlapping positions.\r\n    useEffect(() => {\r\n        if (heroes.length > 0) {\r\n            const pos = generateNonOverlappingPositions();\r\n            setPositions(pos);\r\n        }\r\n    }, [heroes]);\r\n\r\n    return (\r\n        <div className={s.heroesList}>\r\n            {error && <p>{error}</p>}\r\n            {heroes.map((hero, i) => {\r\n                const pos = positions[i];\r\n                return (\r\n                    <div\r\n                        key={i}\r\n                        className={s.heroItem}\r\n                        style={{\r\n                            left: pos ? `${pos.left}px` : \"0px\",\r\n                            top: pos ? `${pos.top}px` : \"0px\",\r\n                            width: \"150px\", // Matches the assumed hero size\r\n                            height: \"150px\",\r\n                        }}\r\n                    >\r\n                        <strong>{hero.name}</strong>\r\n                        <p>{hero.superpower}</p>\r\n                        <p>Humility: {hero.humility}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}